<!DOCTYPE html>  ##Doctype = html

<html lang ="en">  ##Language = English

<title> Testing and Learning </title> ##Title creates a 'header'
<p>I don't know what I'm doing! </p>  ##<P> Creates a paragraph.

</html> 



<To being something> </Add slash to mark the end something>

-

<meta> = tag is usually used to convey data to browsers and search engines that isn’t displayed to the user.
example: tell the search engine the name of a author.  <meta name="author" content="Lee Child">

-

The <head> element is a container for metadata pertaining to the HTML document itself, and should be placed between the opening <html> tag and the opening <body> tag.


Head elements can contain:


/Titles

/Scripts (a computer program that is to be run by the browser)

/File attachments (such as CSS files, JavaScript files or even custom fonts)

/Character encoding

/Meta data

The head element is typically placed near the top of an HTML file.

-

A common example is an embedded video. This would be like taking a video from YouTube and displaying it on your website.

The content placed between <body> and </body> tags makes up most of the content on the page. It consists of nearly anything the developer can dream of, such as: embedded video, images, text, animation, tables of data, advertisements, even music. The sky’s the limit, but within the body tag is where you'll place it.


Here is an example:
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Write title here.</title>
        <meta charset="utf-8">
    </head>
    <body>
    THIS IS WHERE ALL THE CONTENT ON THE WEBPAGE GOES
    </body>
</html>

We use charset to set the exact character set we’re using and as mentioned earlier, UTF-8 is used for over 90% of websites.

-

Heading elements allow for placement of heads (titles) of sections. They’re broken into a series of graduated sizes: <h1> through <h6>.

-

Title shows at top of window tab.  like read the TAB and it'll say what you put.

-


A footer is literally text that appears at the foot (bottom) of each page in a book or document.  


The <footer> tag defines a footer for a document or section.

-

The HTML <main> element represents the most important content of the <body> of a document or portion of a document. It consists of content that is directly related to or expands upon the central topic of a document.

<body>
	<p> Cats are interesting creatures</p>
	<main>
		<h1> Types of felines</h1>
		<p>Lions, tigers, and house cars are common examples of felines. </p>
	</main>
	<h2>Lions</h2>
... (not sure why the example ended with three dots.. I'm just rolling with it)

On a blog post, for example, the <main> element would be where the article is placed. There should only be one “main” element per HTML page.

-

An attribute is a word or phrase used inside an element’s opening tag that controls the element’s behavior.


For example, the image <img> tag allows you to place images inside your webpage. The src (source) attribute is used with this <img> tag; it gives the location of the image (where the image is being displayed from). You can see this in the following:

<img src="https://www.petmd.com/sites/default/files/petmd-cat-happy-15.jpg">

The image tag tells the browser where to put the image on the page, while the src attribute gives the location to pull the image from.

-

<h1>  This	</h1>
<h2>  Is Just 	</h2>
<h3>  Changing	</h3>
<h4>  The Size	</h4> 

-

“Id” is short for “identification.” One of the most popular attributes is the id attribute.


The id attribute specifies a unique name for an HTML element.


For example, you can assign a specific <p> element the id (name) “paragraph” as follows:

<p id="paragraph">This is some text.</p>

Now that you have that id, you can reference (bring up; refer to) it in your code later.


You will learn exactly how to do this and why it's useful in an upcoming step.


Ids are specific and you can only utilize one id per element. For example, you cannot assign the same <h1> element two different ids. Also, you cannot use the same id name for two different elements. For example, this would be incorrect:

<h2 id="heading"></h2> 
<h3 id="heading"></h3>

Ids must be specific to one element and cannot contain any spaces.

-

The anchor <a> element is the HTML code used to create a link to another page. It instructs the browser to display content from another document (typically a web page).


As a note, in older versions of HTML, the word anchor meant what element means now (opening and closing tags and the text in between). Anchor text is the clickable text that is displayed. For example, in this link the anchor text is “The Tech Academy”:


The Tech Academy <--- This was a link on their page.


As a note, by default, most browsers display such links as follows:

(They had an image here)
-Blue color link text = unvisited
-purple = visited
-red = active

The anchor element needs an attribute called an “href attribute.” “Href” is short for “hypertext reference.” This attribute contains the location of the resource or document that the author intends to link to.


Here is what it looks like:
<a href="https://learncodinganywhere.com/">Check out The Tech Academy!</a>

-

A standard path usually consists of three components:


A volume (a single accessible storage area with a single file system – typically residing in a single partition [section] of a hard disk) or drive letter followed by a colon ( : ) in Windows. For example, “C:” (drive) or “D:” (drive).

A directory name. A backslash (\) separates subdirectories within the nested directory hierarchy. Forward slashes are frequently accepted as well. For example, “\Documents” or “\Program Files”

A filename. The backslash separates the file path and the filename. For example, “\letter.docx” or “\picture.jpeg.”

If all three of these components are present, the path is absolute.


If no volume or drive letter is specified and the directory name begins with a backslash, the path is relative.


An absolute path may look something like:


C:\GitHubRepos\HTML_CSS\PathProject\FileName.html


On the other hand, a relative path may have differing beginnings depending on your folder structure. Commonly seen examples include:


Picture.jpg – where the picture file is in the same folder as the requesting file.

images/picture.jpg and ./images/picture.jpg – where the picture file is located in a folder called images on the same folder level as the requesting file.

../images/picture.jpg – where the picture file is located in a folder called images which is in the folder one level up from the current folder of the requesting file.

It is recommended that you use relative paths when linking to images, CSS files, JavaScript files, etc. The reason for this is that if your code is run on a different machine, the absolute path may change – but the relative path always stays the same.

-

In normal English, implicit means “implied, though not plainly stated.”

Implicit href attributes are used to create a link to another webpage that is located in the same folder as the page the <a> tag is in. If we use the folder that is your local repository as an example, an implicit link would link to a file within that folder. 
Example: <a href="yourfilename.html">Whatever link title you choose</a>


Explicit means “stated clearly and in detail.”

Whereas an explicit href attribute links to a file not contained within the folder(s) associated with your website. Typically, explicit href attribute links are to external websites (other websites). The href attribute from the previous step (<a href="https://www.learncodinganywhere.com/"> Check out The Tech Academy!</a>) is an example of an explicit link.

//I understand these but need it worded to me differently.  My assignment file has an example of each being used. 

Tip: 

1.) Ensure the Dog.html file includes all code required of an HTML webpage.

2.) Implicit links are written as:  <a href="yourfilename.html">Whatever title you choose for your link</a> 

-

The <nav> tag defines a set of navigation links. Navigation links are typically included on nav bars (a rectangular strip that includes links to the main pages on a website). They look like this:

Imma try to make an example...They're all click links:

HOME | ABOUT | FAQs | CONTACT

<nav> 
    <a href="home page file name or URL">HOME</a> | 
    <a href="about page file name or URL">ABOUT</a> | 
    <a href="FAQs page file name or URL">FAQs</a> | 
    <a href="contact page file name or URL">CONTACT</a> 
</nav>

-

One way to do this is to save your file, run it in the browser, write more code, save your file again, and then click F5 in the browser (this will refresh the webpage with the newest version of your file).

-

Get the Video ID: For the YouTube Shorts link you provided, O9LElFTzCIk is the video ID.

Use the Embed URL: The embed URL format for a YouTube video is https://www.youtube.com/embed/[VIDEO_ID].


    <!DOCTYPE html>
	<html lang="en">
  	    <head>
  	        <meta charset="UTF-8">
   		<meta name="viewport" content="width=device-width, initial-scale=1.0">
   		<title>Embedded YouTube Video</title>
	    </head>

	    <body>
   		<h1>Watch the Alien Video!</h1>

   		<iframe width="560" height="315" src="https://www.youtube.com/embed/O9LElFTzCIk" frameborder="0" 		 allowfullscreen></iframe>

	    </body>
        </html>


-<iframe>: This tag embeds the video in your HTML page.

-width and height: Set the dimensions of the video player.

-src: The URL with the video ID formatted for embedding.

-frameborder="0": Removes the border around the iframe (older attribute, mainly for legacy support).

-

The <blockquote> element in HTML is used to indicate that the enclosed text is a quotation from another source. It is typically used for longer quotations and often displays the text in a block format to distinguish it from the rest of the content. You can also include a citation to indicate the source of the quotation.


<blockquote>: This tag is used to wrap the quoted content.

<p>: It’s common to include the quotation inside a <p> tag for proper formatting.

<footer>: This tag can be used to include the author's name or source of the quote. This is optional but helps provide context.

"By default, most browsers will indent the text in a blockquote. You can further customize its appearance using CSS. Here’s an example:"

    <blockquote style="font-style: italic; border-left: 2px solid #ccc; padding-left: 10px; margin: 20px 0;">
	<p>To be yourself in a world that is constantly trying to make you something else is the greatest 	accomplishment.</p>

        <footer>— Ralph Waldo Emerson</footer>
    </blockquote>



